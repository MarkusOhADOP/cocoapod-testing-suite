// swift-interface-format-version: 1.0
// swift-compiler-version: Apple Swift version 5.5.2 (swiftlang-1300.0.47.5 clang-1300.0.29.30)
// swift-module-flags: -target arm64-apple-ios11.0 -enable-objc-interop -enable-library-evolution -swift-version 5 -enforce-exclusivity=checked -O -module-name BidmadAdapterFC
import ADOPUtility
import AdColony
import AppLovinSDK
@_exported import BidmadAdapterFC
import Foundation
import InMobiSDK
import Swift
import UIKit
import UnityAds
import _Concurrency
@_inheritsConvenienceInitializers @objc public class BidmadAdapterFCUtility : ObjectiveC.NSObject {
  @objc override dynamic public init()
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAdColonyBanner : ADOPUtility.BidmadAdapterAdEssential, AdColony.AdColonyAdViewDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func show()
  @objc public func hide()
  @objc public func remove()
  @objc public func adColonyAdViewDidLoad(_ adView: AdColony.AdColonyAdView)
  @objc public func adColonyAdViewDidFail(toLoad error: AdColony.AdColonyAdRequestError)
  @objc public func adColonyAdViewDidReceiveClick(_ adView: AdColony.AdColonyAdView)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadIronSourceReward : ADOPUtility.BidmadAdapterAdEssential, ADOPUtility.BidmadAdapterEssential, ADOPUtility.BidmadAdapterRewardAdditional, BidmadAdapterFC.BidmadBridgeISRewardedVideoDelegate, BidmadAdapterFC.BidmadISLogDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func show()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func rewardedVideoHasChangedAvailability(_ available: Swift.Bool)
  @objc public func didReceiveReward(forPlacement placementInfo: Any)
  @objc public func rewardedVideoDidFailToShowWithError(_ error: Swift.Error)
  @objc public func rewardedVideoDidOpen()
  @objc public func rewardedVideoDidClose()
  @objc public func rewardedVideoDidStart()
  @objc public func rewardedVideoDidEnd()
  @objc public func didClickRewardedVideo(_ placementInfo: Any)
  @objc public func sendLog(_ log: Swift.String, level: BidmadAdapterFC.BidmadISLogLevel, tag: BidmadAdapterFC.BidmadLogTag)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinMaxEssential : ADOPUtility.BidmadAdapterAdEssential {
  @objc public func remove()
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinMaxBanner : BidmadAdapterFC.BidmadAppLovinMaxEssential, AppLovinSDK.MAAdViewAdDelegate {
  @objc public static var APPLOVIN_TEST_APPID: Swift.String
  @objc public static var APPLOVIN_TEST_SDK_KEY: Swift.String
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc override public func remove()
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func show()
  @objc public func hide()
  @objc public func didExpand(_ ad: AppLovinSDK.MAAd)
  @objc public func didCollapse(_ ad: AppLovinSDK.MAAd)
  @objc public func didLoad(_ ad: AppLovinSDK.MAAd)
  @objc public func didFailToLoadAd(forAdUnitIdentifier adUnitIdentifier: Swift.String, withError error: AppLovinSDK.MAError)
  @objc public func didDisplay(_ ad: AppLovinSDK.MAAd)
  @objc public func didHide(_ ad: AppLovinSDK.MAAd)
  @objc public func didClick(_ ad: AppLovinSDK.MAAd)
  @objc public func didFail(toDisplay ad: AppLovinSDK.MAAd, withError error: AppLovinSDK.MAError)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadInMobiInterstitial : BidmadAdapterFC.BidmadInMobiEssential, InMobiSDK.IMInterstitialDelegate {
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func shouldLoadAd()
  @objc public func show()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func interstitialDidFinishLoading(_ interstitial: InMobiSDK.IMInterstitial!)
  @objc public func interstitial(_ interstitial: InMobiSDK.IMInterstitial!, didFailToLoadWithError error: InMobiSDK.IMRequestStatus!)
  @objc public func interstitialDidPresent(_ interstitial: InMobiSDK.IMInterstitial!)
  @objc public func interstitial(_ interstitial: InMobiSDK.IMInterstitial!, didFailToPresentWithError error: InMobiSDK.IMRequestStatus!)
  @objc public func interstitialDidDismiss(_ interstitial: InMobiSDK.IMInterstitial!)
  @objc public func interstitial(_ interstitial: InMobiSDK.IMInterstitial!, didInteractWithParams params: [Swift.AnyHashable : Any]!)
  @objc public func interstitial(_ interstitial: InMobiSDK.IMInterstitial!, rewardActionCompletedWithRewards rewards: [Swift.AnyHashable : Any]!)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinInterstitial : ADOPUtility.BidmadAdapterAdEssential, AppLovinSDK.ALAdLoadDelegate, AppLovinSDK.ALAdDisplayDelegate, AppLovinSDK.ALAdVideoPlaybackDelegate {
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func show()
  @objc public func remove()
  @objc public func adService(_ adService: AppLovinSDK.ALAdService, didLoad ad: AppLovinSDK.ALAd)
  @objc public func adService(_ adService: AppLovinSDK.ALAdService, didFailToLoadAdWithError code: Swift.Int32)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasDisplayedIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasHiddenIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasClickedIn view: UIKit.UIView)
  @objc public func videoPlaybackBegan(in ad: AppLovinSDK.ALAd)
  @objc public func videoPlaybackEnded(in ad: AppLovinSDK.ALAd, atPlaybackPercent percentPlayed: Foundation.NSNumber, fullyWatched wasFullyWatched: Swift.Bool)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinReward : ADOPUtility.BidmadAdapterAdEssential, AppLovinSDK.ALAdDisplayDelegate, AppLovinSDK.ALAdLoadDelegate, AppLovinSDK.ALAdRewardDelegate, AppLovinSDK.ALAdVideoPlaybackDelegate {
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func show()
  @objc public func remove()
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasDisplayedIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasHiddenIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasClickedIn view: UIKit.UIView)
  @objc public func adService(_ adService: AppLovinSDK.ALAdService, didLoad ad: AppLovinSDK.ALAd)
  @objc public func adService(_ adService: AppLovinSDK.ALAdService, didFailToLoadAdWithError code: Swift.Int32)
  @objc public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, didSucceedWithResponse response: [Swift.AnyHashable : Any])
  @objc public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, didExceedQuotaWithResponse response: [Swift.AnyHashable : Any])
  @objc public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, wasRejectedWithResponse response: [Swift.AnyHashable : Any])
  @objc public func rewardValidationRequest(for ad: AppLovinSDK.ALAd, didFailWithError responseCode: Swift.Int)
  @objc public func videoPlaybackBegan(in ad: AppLovinSDK.ALAd)
  @objc public func videoPlaybackEnded(in ad: AppLovinSDK.ALAd, atPlaybackPercent percentPlayed: Foundation.NSNumber, fullyWatched wasFullyWatched: Swift.Bool)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadInMobiEssential : ADOPUtility.BidmadAdapterAdEssential {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadIronSourceBanner : ADOPUtility.BidmadAdapterAdEssential, BidmadAdapterFC.BidmadISLogDelegate, BidmadAdapterFC.BidmadBridgeISBannerDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func show()
  @objc public func hide()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func bannerDidLoad(_ bannerView: Any)
  @objc public func bannerDidFailToLoadWithError(_ error: Swift.Error)
  @objc public func didClickBanner()
  @objc public func bannerWillPresentScreen()
  @objc public func bannerDidDismissScreen()
  @objc public func bannerWillLeaveApplication()
  @objc public func sendLog(_ log: Swift.String, level: BidmadAdapterFC.BidmadISLogLevel, tag: BidmadAdapterFC.BidmadLogTag)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadUnityAdsInterstitial : ADOPUtility.BidmadAdapterAdEssential, UnityAds.UnityAdsInitializationDelegate, UnityAds.UnityAdsLoadDelegate, UnityAds.UnityAdsShowDelegate {
  @objc public static var UNITYADS_TEST_APPID: Swift.String
  @objc public static func UNITYADS_TEST_PUBID(_ isRewardedAd: Swift.Bool) -> Swift.String
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func initializationComplete()
  @objc public func initializationFailed(_ error: UnityAds.UnityAdsInitializationError, withMessage message: Swift.String)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func show()
  @objc public func remove()
  @objc public func unityAdsAdLoaded(_ placementId: Swift.String)
  @objc public func unityAdsAdFailed(toLoad placementId: Swift.String, withError error: UnityAds.UnityAdsLoadError, withMessage message: Swift.String)
  @objc public func unityAdsShowComplete(_ placementId: Swift.String, withFinish state: UnityAds.UnityAdsShowCompletionState)
  @objc public func unityAdsShowFailed(_ placementId: Swift.String, withError error: UnityAds.UnityAdsShowError, withMessage message: Swift.String)
  @objc public func unityAdsShowStart(_ placementId: Swift.String)
  @objc public func unityAdsShowClick(_ placementId: Swift.String)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinMaxInterstitial : BidmadAdapterFC.BidmadAppLovinMaxEssential, AppLovinSDK.MAAdDelegate {
  @objc public static var APPLOVIN_TEST_APPID: Swift.String
  @objc public static var APPLOVIN_TEST_SDK_KEY: Swift.String
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc override public func remove()
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func show()
  @objc public func didLoad(_ ad: AppLovinSDK.MAAd)
  @objc public func didFailToLoadAd(forAdUnitIdentifier adUnitIdentifier: Swift.String, withError error: AppLovinSDK.MAError)
  @objc public func didDisplay(_ ad: AppLovinSDK.MAAd)
  @objc public func didHide(_ ad: AppLovinSDK.MAAd)
  @objc public func didClick(_ ad: AppLovinSDK.MAAd)
  @objc public func didFail(toDisplay ad: AppLovinSDK.MAAd, withError error: AppLovinSDK.MAError)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAdColonyInterstitial : ADOPUtility.BidmadAdapterAdEssential, AdColony.AdColonyInterstitialDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func show()
  @objc public func remove()
  @objc public func adColonyInterstitialDidLoad(_ interstitial: AdColony.AdColonyInterstitial)
  @objc public func adColonyInterstitialDidFail(toLoad error: AdColony.AdColonyAdRequestError)
  @objc public func adColonyInterstitialExpired(_ interstitial: AdColony.AdColonyInterstitial)
  @objc public func adColonyInterstitialDidReceiveClick(_ interstitial: AdColony.AdColonyInterstitial)
  @objc public func adColonyInterstitialWillOpen(_ interstitial: AdColony.AdColonyInterstitial)
  @objc public func adColonyInterstitialDidClose(_ interstitial: AdColony.AdColonyInterstitial)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadIronSourceInterstitial : ADOPUtility.BidmadAdapterAdEssential, BidmadAdapterFC.BidmadBridgeISInterstitialDelegate, BidmadAdapterFC.BidmadISLogDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func show()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func interstitialDidLoad()
  @objc public func interstitialDidFailToLoadWithError(_ error: Swift.Error)
  @objc public func interstitialDidOpen()
  @objc public func interstitialDidClose()
  @objc public func interstitialDidShow()
  @objc public func interstitialDidFailToShowWithError(_ error: Swift.Error)
  @objc public func didClickInterstitial()
  @objc public func sendLog(_ log: Swift.String, level: BidmadAdapterFC.BidmadISLogLevel, tag: BidmadAdapterFC.BidmadLogTag)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadInMobiBanner : BidmadAdapterFC.BidmadInMobiEssential, InMobiSDK.IMBannerDelegate {
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func show()
  @objc public func hide()
  @objc public func remove()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func bannerDidFinishLoading(_ banner: InMobiSDK.IMBanner!)
  @objc public func banner(_ banner: InMobiSDK.IMBanner!, didFailToLoadWithError error: InMobiSDK.IMRequestStatus!)
  @objc public func banner(_ banner: InMobiSDK.IMBanner!, didInteractWithParams params: [Swift.AnyHashable : Any]!)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinMaxReward : BidmadAdapterFC.BidmadAppLovinMaxEssential, AppLovinSDK.MARewardedAdDelegate {
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc override public func remove()
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func show()
  @objc public func setIsRewardedAd(_ isRewardedAd: Swift.Bool)
  @objc public func didStartRewardedVideo(for ad: AppLovinSDK.MAAd)
  @objc public func didCompleteRewardedVideo(for ad: AppLovinSDK.MAAd)
  @objc public func didRewardUser(for ad: AppLovinSDK.MAAd, with reward: AppLovinSDK.MAReward)
  @objc public func didLoad(_ ad: AppLovinSDK.MAAd)
  @objc public func didFailToLoadAd(forAdUnitIdentifier adUnitIdentifier: Swift.String, withError error: AppLovinSDK.MAError)
  @objc public func didDisplay(_ ad: AppLovinSDK.MAAd)
  @objc public func didHide(_ ad: AppLovinSDK.MAAd)
  @objc public func didClick(_ ad: AppLovinSDK.MAAd)
  @objc public func didFail(toDisplay ad: AppLovinSDK.MAAd, withError error: AppLovinSDK.MAError)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadUnityAdsBanner : ADOPUtility.BidmadAdapterAdEssential, UnityAds.UnityAdsInitializationDelegate, UnityAds.UADSBannerViewDelegate {
  @objc public static var UNITYADS_TEST_APPID: Swift.String
  @objc public static var UNITYADS_TEST_PUBID: Swift.String
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func initializationComplete()
  @objc public func initializationFailed(_ error: UnityAds.UnityAdsInitializationError, withMessage message: Swift.String)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func show()
  @objc public func hide()
  @objc public func remove()
  @objc public func bannerViewDidLoad(_ bannerView: UnityAds.UADSBannerView!)
  @objc public func bannerViewDidClick(_ bannerView: UnityAds.UADSBannerView!)
  @objc public func bannerViewDidLeaveApplication(_ bannerView: UnityAds.UADSBannerView!)
  @objc public func bannerViewDidError(_ bannerView: UnityAds.UADSBannerView!, error: UnityAds.UADSBannerError!)
  @objc deinit
}
@_inheritsConvenienceInitializers @objcMembers open class BidmadAppLovinBanner : ADOPUtility.BidmadAdapterAdEssential, AppLovinSDK.ALAdLoadDelegate, AppLovinSDK.ALAdDisplayDelegate, AppLovinSDK.ALAdViewEventDelegate {
  @objc public static var PREFIX: Swift.String
  @objc required public init(appID: Swift.String, pubID: Swift.String?, rootVC: UIKit.UIViewController, parentView: UIKit.UIView?, isChild: Foundation.NSNumber?, isGDPRConsent: Foundation.NSNumber?, isCCPAConsent: Foundation.NSNumber?)
  @objc public func load()
  @objc public func setIsDebug(_ isDebug: Swift.Bool)
  @objc public func setBannerSize(_ sizeString: Swift.String)
  @objc public func show()
  @objc public func hide()
  @objc public func remove()
  @objc public func adService(_ adService: AppLovinSDK.ALAdService, didLoad ad: AppLovinSDK.ALAd)
  @objc public func adService(_ adService: AppLovinSDK.ALAdService, didFailToLoadAdWithError code: Swift.Int32)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasDisplayedIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasHiddenIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, wasClickedIn view: UIKit.UIView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, didPresentFullscreenFor adView: AppLovinSDK.ALAdView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, willDismissFullscreenFor adView: AppLovinSDK.ALAdView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, didDismissFullscreenFor adView: AppLovinSDK.ALAdView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, willLeaveApplicationFor adView: AppLovinSDK.ALAdView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, didReturnToApplicationFor adView: AppLovinSDK.ALAdView)
  @objc public func ad(_ ad: AppLovinSDK.ALAd, didFailToDisplayIn adView: AppLovinSDK.ALAdView, withError code: AppLovinSDK.ALAdViewDisplayErrorCode)
  @objc deinit
}
